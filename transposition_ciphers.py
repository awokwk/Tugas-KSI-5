# -*- coding: utf-8 -*-
"""Transposition Ciphers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G_W8MxQhD-il5xfvWFRyVbvd88oWhuxQ
"""

import random
import string

def generate_random_key(length):
    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))

def transposition_encrypt(text, key):
    order = [i for i in range(len(key))]
    order.sort(key=lambda x: key[x])

    encrypted_text = [''] * len(text)

    for col in order:
        pointer = col
        while pointer < len(text):
            encrypted_text[pointer] += text[col]
            pointer += len(key)

    return ''.join(encrypted_text)

def transposition_decrypt(text, key):
    if len(key) == 0:
        raise ValueError("Panjang kunci enkripsi tidak boleh nol.")

    order = [i for i in range(len(key))]
    order.sort(key=lambda x: key[x])

    decrypted_text = [''] * len(text)
    col = 0

    for char in text:
        decrypted_text[order[col]] += char
        col += 1

        if col == len(key):
            col = 0

    return ''.join(decrypted_text)

def encrypt(text):
    key_length = random.randint(5, 10)
    encryption_key = generate_random_key(key_length)

    encrypted_text = text

    layers = 3
    keys_used = []
    for _ in range(layers):
        keys_used.append(encryption_key)
        encrypted_text = transposition_encrypt(encrypted_text, encryption_key)

    return encrypted_text, encryption_key

def decrypt(text, key):
    layers = 3

    for _ in range(layers):
        text = transposition_decrypt(text, key)

    return text

def main():
    choice = input("Pilih operasi (encrypt/decrypt): ").lower()

    if choice == "encrypt":
        user_input = input("Masukkan teks yang ingin diencode: ")
        encrypted_text, keys_used = encrypt(user_input)
        print("Hasil encoding:", encrypted_text)
        print("Kunci enkripsi:", keys_used)

    elif choice == "decrypt":
        user_input = input("Masukkan teks yang ingin didecode: ")
        decryption_key = input("Masukkan kunci enkripsi: ")
        decrypted_text = decrypt(user_input, decryption_key)
        print("Hasil decoding:", decrypted_text)

    else:
        print("Pilihan tidak valid. Silakan pilih 'encrypt' atau 'decrypt'.")

if __name__ == "__main__":
    main()