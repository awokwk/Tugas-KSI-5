# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cuDYFSz-QNzcznySMKgxhOC1Tjq_iaO-
"""

import random
import string

def generate_substitution_key():
    alphabet = list(string.ascii_uppercase + string.ascii_lowercase + string.digits)
    shuffled_alphabet = random.sample(alphabet, len(alphabet))
    substitution_key = dict(zip(alphabet, shuffled_alphabet))
    return substitution_key

def substitution_encrypt(text, key):
    encrypted_text = ''.join(key.get(char, char) for char in text)
    return encrypted_text

def substitution_decrypt(text, key):
    reversed_key = {v: k for k, v in key.items()}
    decrypted_text = ''.join(reversed_key.get(char, char) for char in text)
    return decrypted_text

def encrypt(text):
    substitution_key = generate_substitution_key()
    encrypted_text = substitution_encrypt(text, substitution_key)
    return encrypted_text, substitution_key

def decrypt(text, key):
    decrypted_text = substitution_decrypt(text, key)
    return decrypted_text

def main():
    choice = input("Pilih operasi (encrypt/decrypt): ").lower()

    if choice == "encrypt":
        user_input = input("Masukkan teks yang ingin diencode: ")
        encrypted_text, substitution_key = encrypt(user_input)
        print("Hasil encoding:", encrypted_text)
        print("Kunci enkripsi:", substitution_key)

    elif choice == "decrypt":
        user_input = input("Masukkan teks yang ingin didecode: ")
        decryption_key = input("Masukkan kunci enkripsi (format: {'A': 'B', 'C': 'D', ...}): ")
        try:
            substitution_key = eval(decryption_key)
            decrypted_text = decrypt(user_input, substitution_key)
            print("Hasil decoding:", decrypted_text)
        except Exception as e:
            print("Format kunci enkripsi tidak valid. Pastikan menggunakan format yang benar.")

    else:
        print("Pilihan tidak valid. Silakan pilih 'encrypt' atau 'decrypt'.")

if __name__ == "__main__":
    main()